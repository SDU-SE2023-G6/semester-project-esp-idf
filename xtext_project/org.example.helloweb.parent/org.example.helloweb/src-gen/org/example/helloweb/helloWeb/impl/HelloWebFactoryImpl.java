/**
 * generated by Xtext 2.31.0
 */
package org.example.helloweb.helloWeb.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.example.helloweb.helloWeb.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class HelloWebFactoryImpl extends EFactoryImpl implements HelloWebFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static HelloWebFactory init()
  {
    try
    {
      HelloWebFactory theHelloWebFactory = (HelloWebFactory)EPackage.Registry.INSTANCE.getEFactory(HelloWebPackage.eNS_URI);
      if (theHelloWebFactory != null)
      {
        return theHelloWebFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new HelloWebFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HelloWebFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case HelloWebPackage.SENSOR_CONFIG: return createSensorConfig();
      case HelloWebPackage.SENSOR: return createSensor();
      case HelloWebPackage.DEVICE_TYPE: return createDeviceType();
      case HelloWebPackage.SENSOR_INSTANTIATION: return createSensorInstantiation();
      case HelloWebPackage.CONSTRAINT: return createConstraint();
      case HelloWebPackage.CONDITION: return createCondition();
      case HelloWebPackage.NESTED_LOGICAL_CONDITION: return createNestedLogicalCondition();
      case HelloWebPackage.COMPARISON: return createComparison();
      case HelloWebPackage.COMPARISON_VALUE: return createComparisonValue();
      case HelloWebPackage.VALUE_REF: return createValueRef();
      case HelloWebPackage.OUTPUT: return createOutput();
      case HelloWebPackage.PIN: return createPin();
      case HelloWebPackage.SENSOR_UNIT: return createSensorUnit();
      case HelloWebPackage.TIME_UNIT: return createTimeUnit();
      case HelloWebPackage.DECIMAL: return createDecimal();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SensorConfig createSensorConfig()
  {
    SensorConfigImpl sensorConfig = new SensorConfigImpl();
    return sensorConfig;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sensor createSensor()
  {
    SensorImpl sensor = new SensorImpl();
    return sensor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeviceType createDeviceType()
  {
    DeviceTypeImpl deviceType = new DeviceTypeImpl();
    return deviceType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SensorInstantiation createSensorInstantiation()
  {
    SensorInstantiationImpl sensorInstantiation = new SensorInstantiationImpl();
    return sensorInstantiation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Constraint createConstraint()
  {
    ConstraintImpl constraint = new ConstraintImpl();
    return constraint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Condition createCondition()
  {
    ConditionImpl condition = new ConditionImpl();
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NestedLogicalCondition createNestedLogicalCondition()
  {
    NestedLogicalConditionImpl nestedLogicalCondition = new NestedLogicalConditionImpl();
    return nestedLogicalCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Comparison createComparison()
  {
    ComparisonImpl comparison = new ComparisonImpl();
    return comparison;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComparisonValue createComparisonValue()
  {
    ComparisonValueImpl comparisonValue = new ComparisonValueImpl();
    return comparisonValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ValueRef createValueRef()
  {
    ValueRefImpl valueRef = new ValueRefImpl();
    return valueRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Output createOutput()
  {
    OutputImpl output = new OutputImpl();
    return output;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Pin createPin()
  {
    PinImpl pin = new PinImpl();
    return pin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SensorUnit createSensorUnit()
  {
    SensorUnitImpl sensorUnit = new SensorUnitImpl();
    return sensorUnit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TimeUnit createTimeUnit()
  {
    TimeUnitImpl timeUnit = new TimeUnitImpl();
    return timeUnit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Decimal createDecimal()
  {
    DecimalImpl decimal = new DecimalImpl();
    return decimal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public HelloWebPackage getHelloWebPackage()
  {
    return (HelloWebPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static HelloWebPackage getPackage()
  {
    return HelloWebPackage.eINSTANCE;
  }

} //HelloWebFactoryImpl
